var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// docs/.vuepress/plugins/right-sidebar.js
var require_right_sidebar = __commonJS({
  "docs/.vuepress/plugins/right-sidebar.js"(exports, module) {
    module.exports = (options, ctx) => ({
      extendPageData($page) {
        const { frontmatter } = $page;
        $page.right_sidebar_active = true;
        if (frontmatter.right_sidebar_active == "false" || frontmatter.right_sidebar_active == false) {
          $page.right_sidebar_active = false;
        }
      }
    });
  }
});

// docs/.vuepress/config.ts
import { defineConfig } from "vuepress/config";

// docs/.vuepress/config/nav.ts
var NavItems4ZH = [
  {
    text: "Java",
    link: "/java/base/java-messy-code"
  },
  {
    text: "Go",
    link: "/go/base/go-command"
  },
  {
    text: "SpringBoot",
    link: "/springboot/project-sumary/"
  },
  {
    text: "TCP/IP",
    link: "/tcp-ip/http/http-cors-jsonp/"
  },
  {
    text: "\u5F00\u53D1\u5DE5\u5177",
    link: "/dev-tools/asdf/"
  },
  {
    text: "DevOps",
    link: "/devops/docker/"
  }
];

// docs/.vuepress/config/shared.ts
function getJava() {
  const sidebar = [
    {
      title: "Java \u57FA\u7840",
      collapsable: false,
      children: [
        "base/java-messy-code",
        "base/java-run-command.md",
        "base/java-reference",
        "base/how-to-read-file-in-java",
        "base/java-asynchronous-programming"
      ]
    },
    {
      title: "IO",
      collapsable: false,
      children: [
        "io/io-module",
        "io/java-io",
        "io/java-nio"
      ]
    },
    {
      title: "JUC",
      collapsable: false,
      children: [
        "juc/synchronized",
        "juc/volatile",
        "juc/thread-pool-executor"
      ]
    },
    {
      title: "JVM",
      collapsable: false,
      children: [
        "jvm/",
        "jvm/jvm-memory-model",
        "jvm/class-loader",
        "jvm/jvm-gc",
        "jvm/jvm-gc-demo"
      ]
    },
    {
      title: "\u901A\u7528\u5DE5\u5177",
      collapsable: false,
      children: [
        "lib/snowflake",
        "lib/distributed_lock"
      ]
    }
  ];
  return sidebar;
}
function getGo() {
  const sidebar = [
    {
      title: "Go \u5B66\u4E60",
      collapsable: false,
      children: [
        ""
      ]
    },
    {
      title: "Go \u57FA\u7840",
      collapsable: false,
      children: [
        "base/go-command",
        "base/func",
        "base/init-main",
        "base/pointers",
        "base/recover-panic",
        "base/variables"
      ]
    }
  ];
  return sidebar;
}
function getSpringboot() {
  const sidebar = [
    {
      title: "\u9879\u76EE\u603B\u7ED3",
      collapsable: false,
      path: "project-sumary"
    },
    {
      title: "\u5C5E\u6027\u914D\u7F6E",
      collapsable: false,
      path: "externalized-configuration"
    },
    {
      title: "\u6570\u636E\u5E93\u8FDE\u63A5\u6C60",
      collapsable: false,
      path: "datasource"
    }
  ];
  return sidebar;
}
function getTcpIp() {
  const sidebar = [
    {
      title: "HTTP",
      collapsable: false,
      children: [
        {
          title: "HTTP \u7F13\u5B58",
          collapsable: false,
          path: "http/http-caching"
        },
        {
          title: "\u8DE8\u57DF",
          collapsable: false,
          path: "http/http-cors-jsonp"
        }
      ]
    },
    {
      title: "TCP/IP",
      collapsable: false,
      children: [
        {
          title: "TCP/IP \u4E09\u6B21\u63E1\u624B\uFF0C\u56DB\u6B21\u6325\u624B",
          collapsable: false,
          path: "tcp-ip"
        }
      ]
    }
  ];
  return sidebar;
}
function getDevTools() {
  const sidebar = [
    {
      title: "asdf \u5DE5\u5177\u591A\u7248\u672C\u7BA1\u7406",
      collapsable: false,
      children: [
        "asdf"
      ]
    },
    {
      title: "Git",
      collapsable: false,
      children: [
        {
          title: "Git \u914D\u7F6E",
          collapsable: false,
          path: "git/git"
        },
        {
          title: "Git \u547D\u4EE4",
          collapsable: false,
          path: "git/git-command"
        },
        {
          title: "Git \u539F\u7406",
          collapsable: false,
          path: "git/git-principle"
        },
        {
          title: "Git Hook",
          collapsable: false,
          path: "git/git-hook"
        },
        {
          title: "Git Submodule",
          collapsable: false,
          path: "git/git-submodule"
        }
      ]
    },
    {
      title: "Brew",
      collapsable: false,
      children: [
        "brew"
      ]
    },
    {
      title: "Iterm2",
      collapsable: false,
      children: [
        "iterm2"
      ]
    },
    {
      title: "Gradle",
      collapsable: false,
      children: [
        "gradle"
      ]
    },
    {
      title: "Maven",
      collapsable: false,
      children: [
        "maven"
      ]
    },
    {
      title: "Mac",
      collapsable: false,
      children: [
        "mac"
      ]
    }
  ];
  return sidebar;
}
function getDevops() {
  const sidebar = [
    {
      title: "Docker",
      collapsable: false,
      children: [
        "docker/"
      ]
    },
    {
      title: "Terraform",
      collapsable: false,
      children: [
        "terraform/"
      ]
    },
    {
      title: "AWS",
      collapsable: false,
      children: [
        "aws/"
      ]
    },
    {
      title: "Linux",
      collapsable: false,
      children: [
        "linux/linux-base",
        "linux/vim",
        "linux/ssh",
        "linux/redirect-pipeline",
        "linux/debian",
        "linux/shell-base",
        "linux/shell-example"
      ]
    },
    {
      title: "auth0",
      collapsable: false,
      children: [
        "auth0/auth0"
      ]
    },
    {
      title: "Nginx",
      collapsable: false,
      children: [
        "nginx/nginx-base",
        "nginx/nginx-config",
        "nginx/nginx-performance"
      ]
    },
    {
      title: "\u6570\u636E\u5E93",
      collapsable: false,
      children: [
        {
          title: "Mysql",
          collapsable: false,
          children: [
            "database/mysql/",
            "database/mysql/mysql-arch",
            "database/mysql/mysql-index",
            "database/mysql/mysql-lock-and-transaction",
            "database/mysql/mysql-explain",
            "database/mysql/mysql-limit",
            "database/mysql/mysql-data-types",
            "database/mysql/mysql-account-management",
            "database/mysql/mysql-backup-recovery"
          ]
        },
        {
          title: "PostgreSql",
          collapsable: false,
          children: [
            "database/postgresql/postgresql"
          ]
        }
      ]
    },
    {
      title: "Elasticsearch",
      collapsable: false,
      children: [
        "elasticsearch/es"
      ]
    },
    {
      title: "Redis",
      collapsable: false,
      children: [
        "redis/redis"
      ]
    },
    {
      title: "vue",
      collapsable: false,
      children: [
        "vue/vue-depoly"
      ]
    }
  ];
  return sidebar;
}
function getGuideSidebar(groupA, groupB) {
  const sidebar = [
    {
      title: groupA,
      collapsable: false,
      children: [
        "",
        "getting-started",
        "directory-structure",
        "basic-config",
        "typescript-as-config",
        "assets",
        "markdown",
        "using-vue",
        "i18n",
        "deploy"
      ]
    },
    {
      title: groupB,
      collapsable: false,
      children: [
        "frontmatter",
        "permalinks",
        "markdown-slot",
        "global-computed"
      ]
    }
  ];
  return sidebar;
}

// docs/.vuepress/config/sidebar.ts
var Sidebar4ZH = {
  "/java/": getJava(),
  "/go/": getGo(),
  "/springboot/": getSpringboot(),
  "/dev-tools/": getDevTools(),
  "/tcp-ip/": getTcpIp(),
  "/devops/": getDevops(),
  "/vuepress/guide/": getGuideSidebar("\u6307\u5357", "\u6DF1\u5165")
};

// docs/.vuepress/config/plugin.ts
var MFlyYouPlugin = [
  require_right_sidebar(),
  ["vuepress-plugin-code-copy", true],
  ["@vuepress/back-to-top", true],
  [
    "@vuepress/pwa",
    {
      serviceWorker: true,
      updatePopup: true
    }
  ],
  ["@vuepress/medium-zoom", true],
  [
    "@vuepress/google-analytics",
    {
      "ga": "UA-159299742-2"
    }
  ]
];

// docs/.vuepress/config/head.ts
var MFlyYouHeads = [
  ["link", { rel: "icon", href: `/favicon.ico` }],
  ["meta", { name: "theme-color", content: "#3eaf7c" }]
];

// docs/.vuepress/config/theme.ts
var MFlyYouThemeConfig = {
  repo: "zhangpanqin/mflyyou",
  repoLabel: "GitHub",
  docsRepo: "zhangpanqin/mflyyou",
  docsDir: "docs",
  docsBranch: "main",
  editLinks: true,
  sidebarDepth: 3,
  smoothScroll: true,
  editLinkText: "\u5728 GitHub \u4E0A\u7F16\u8F91\u6B64\u9875",
  locales: {
    "/": {
      label: "\u7B80\u4F53\u4E2D\u6587",
      selectText: "\u9009\u62E9\u8BED\u8A00",
      ariaLabel: "\u9009\u62E9\u8BED\u8A00",
      editLinkText: "\u5728 GitHub \u4E0A\u7F16\u8F91\u6B64\u9875",
      lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
      nav: NavItems4ZH,
      sidebar: Sidebar4ZH
    }
  }
};

// docs/.vuepress/config/env_config.ts
var VUEPRESS_MODE = process.env.VUEPRESS_MODE;
var MflyyouConfig = getMflyyouConfig();
function getMflyyouConfig() {
  if (!VUEPRESS_MODE) {
    console.error("\u914D\u7F6E\u73AF\u5883\u53D8\u91CF VUEPRESS_MODE : \u53D6\u503C github \u6216\u8005 mflyyou ");
    process.exit();
  }
  if (VUEPRESS_MODE == "github") {
    return {
      base: "/mflyyou/"
    };
  }
  return {};
}

// docs/.vuepress/config.ts
var config_default = defineConfig((ctx) => ({
  head: MFlyYouHeads,
  themeConfig: MFlyYouThemeConfig,
  plugins: MFlyYouPlugin,
  title: "\u5F20\u6500\u94A6\u7684\u7B14\u8BB0",
  base: MflyyouConfig.base,
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Mflyyou",
      description: "\u5F20\u6500\u94A6\u7684\u7B14\u8BB0"
    }
  },
  extraWatchFiles: [
    ".vuepress/**/*.ts",
    "**/*.md",
    "**/*.vue"
  ],
  evergreen: !ctx.isProd
}));
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
