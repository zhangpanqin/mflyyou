(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{408:function(a,r,t){"use strict";t.r(r);var e=t(9),s=Object(e.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"terraform"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraform"}},[a._v("#")]),a._v(" Terraform")]),a._v(" "),r("h2",{attrs:{id:"login-token"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#login-token"}},[a._v("#")]),a._v(" Login & Token")]),a._v(" "),r("p",[a._v("我们本地运行 terraform 命令的时候，但是 terraform state 保存在 terraform cloud 上。这就需要我们配置 token 让我们本地的可以访问 terraform cloud 。")]),a._v(" "),r("h3",{attrs:{id:"terraform-login"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraform-login"}},[a._v("#")]),a._v(" terraform login")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保存登录凭证到 ${HOME}/.terraform.d/credentials.tfrc.json，这个是全局配置")]),a._v("\nterraform login\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 推荐配置，也是全局，配置了 `export TF_CLI_CONFIG_FILE=.terraformrc` 就不会找全局的 `${HOME}/.terraformrc`")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),r("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOME")]),a._v("}")]),a._v("/.terraformrc\n")])])]),r("h3",{attrs:{id:"terraformrc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraformrc"}},[a._v("#")]),a._v(" .terraformrc")]),a._v(" "),r("p",[a._v("我们也可以将 token 保存在 .terraformrc 中，terraform 默认会找当前 Home 下的 .terraformrc 文件，既 "),r("code",[a._v("${HOME}/.terraformrc")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('credentials "app.terraform.io" {\ntoken = ""\n}\n')])])]),r("p",[a._v("如果有多个 terraform 项目来自不同的 org，我们可以通过配置 "),r("code",[a._v("TF_CLI_CONFIG_FILE")]),a._v(" ,让不同的项目读取不同的 token。")]),a._v(" "),r("p",[a._v("创建了 "),r("code",[a._v(".envrc")]),a._v(" 文件，其中定义了 terraform 项目 token 从哪里去")]),a._v(" "),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('export TF_CLI_CONFIG_FILE="$HOME/.terraformrc-mflyyou"\n')])])]),r("p",[a._v("在 "),r("code",[a._v("$HOME/.terraformrc-mflyyou")]),a._v(" 写入 terraform token 信息")]),a._v(" "),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('credentials "app.terraform.io" {\ntoken = ""\n}\n')])])]),r("h2",{attrs:{id:"terraform-state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraform-state"}},[a._v("#")]),a._v(" Terraform state")]),a._v(" "),r("p",[a._v("terraform 会存储我们创建的资源和配置的状态，以便于 Terraform 来确定要对哪些资源进行了更改。")]),a._v(" "),r("p",[a._v("这些元数据信息默认会保存在 本地的 "),r("code",[a._v("terraform.tfstate")]),a._v(" 中，不过我们也可以将 state 保存在 terraform cloud 上或者别的第三方存储服务上，比如说 s3。")]),a._v(" "),r("p",[a._v("tfstate 状态文件的内容格式是 JSON。")]),a._v(" "),r("h3",{attrs:{id:"local-state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#local-state"}},[a._v("#")]),a._v(" local state")]),a._v(" "),r("div",{staticClass:"language-terraform extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('terraform {\n  required_version = ">= 1.1.7"\n\n  backend "local" {\n    path = "relative/terraform.tfstate"\n  }\n}\n')])])]),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),r("p",[a._v("我们不会使用 loca state 进行项目开发，一般我们本地 spike 或者研究性可以。")])]),a._v(" "),r("h3",{attrs:{id:"command"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[a._v("#")]),a._v(" command")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从 state 文件中移除这个 resource，不会销毁 infra.")]),a._v("\ntf state "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" docker_container.web\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从远程拉取 statue 保存到本地的 terraform.tfstate")]),a._v("\ntf state pull "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" terraform.tfstate\n")])])]),r("h3",{attrs:{id:"terraform-import"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraform-import"}},[a._v("#")]),a._v(" terraform import")]),a._v(" "),r("p",[r("code",[a._v("terraform import")]),a._v(" 用于导入已经创建好的基础设施，让 terraform 来管理。")]),a._v(" "),r("p",[a._v("例如，我已经创建了一个 docker container 在本地，我想让这个 container 的让 terraform 管理。")]),a._v(" "),r("p",[a._v("我就可以将其导入 terraform 中去。")]),a._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),r("p",[a._v("terraform import 直接操作的就是 state，如果是 remote 模式，直接就改变了线上 state。")]),a._v(" "),r("p",[a._v("最好在本地实验好之后，在在远程 state 操作。")])]),a._v(" "),r("ul",[r("li",[r("p",[a._v("创建一个 container")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" hashicorp-learn "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--detach")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--publish")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80 nginx:latest\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看 container 运行")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filter")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name=hashicorp-learn"')]),a._v("\n")])])])]),a._v(" "),r("li",[r("p",[a._v("拉取远程 state 到本地，我们直接操作这个本地 state，防止修改了线上")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[a._v("tf state pull "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" terraform.tfstate\n")])])])]),a._v(" "),r("li",[r("p",[a._v("修改 terraform backend 为 local")]),a._v(" "),r("div",{staticClass:"language-terraform extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('terraform {\n  #   cloud {\n  #     organization = "mflyyou"\n  #     workspaces {\n  #       name = "learn-terraform-import"\n  #     }\n  #   }\n\n  backend "local" {\n    path = "terraform.tfstate"\n  }\n }\n')])])])]),a._v(" "),r("li",[r("p",[a._v("先创建少对应的 resource 不用加配置")]),a._v(" "),r("div",{staticClass:"language-terraform extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('provider "docker" {\n  # 兼容 colima\n  host = "unix:///Users/panqinzhang/.colima/docker.sock"\n}\nresource "docker_container" "web" {}\n')])])])]),a._v(" "),r("li",[r("p",[a._v("导入 state 到本地的 terraform.tfstate 文件")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[a._v("terraform "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-state")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("terraform.tfstate docker_container.web "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{{.ID}}"')]),a._v(" hashicorp-learn"),r("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])])]),a._v(" "),r("li",[r("p",[a._v("tf plan 查看执行计划")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[a._v("tfp "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-state")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("terraform.tfstate\n")])])])]),a._v(" "),r("li",[r("p",[a._v("修改 resource 配置到 tf plan 在期望的变更内")])]),a._v(" "),r("li",[r("p",[a._v("然后切换 remote 模式，用 tf import 把 state 同步到远程去。")])]),a._v(" "),r("li",[r("p",[a._v("然后 tf plan 查看执行计划，然后在预期内，tf apply")])])]),a._v(" "),r("h2",{attrs:{id:"tf-var-name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tf-var-name"}},[a._v("#")]),a._v(" TF_VAR_name")]),a._v(" "),r("p",[a._v("terraform 定义的 variable 可以通过环境变量来传值，优先级低于 auto.tfvars.json 文件。")]),a._v(" "),r("p",[a._v("比如在 terraform 定义了敏感的 secret 。")]),a._v(" "),r("div",{staticClass:"language-terraform extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('variable "auth0_client_secret" {\n  type      = string\n  sensitive = true\n}\n')])])]),r("p",[a._v("你可以通过传递环境变量，在运行 tf plan 的时候，terraform 会从环境变量中找到对应的值。")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TF_VAR_auth0_client_secret")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xxx"')]),a._v("\n")])])]),r("p",[a._v("For more on how to use "),r("code",[a._v("TF_VAR_name")]),a._v(" in context, check out the section on "),r("a",{attrs:{href:"https://developer.hashicorp.com/terraform/language/values/variables",target:"_blank",rel:"noopener noreferrer"}},[a._v("Variable Configuration"),r("OutboundLink")],1),a._v(".")]),a._v(" "),r("h2",{attrs:{id:"terraform-demo-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terraform-demo-code"}},[a._v("#")]),a._v(" Terraform demo code")]),a._v(" "),r("h3",{attrs:{id:"shell-script"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shell-script"}},[a._v("#")]),a._v(" shell_script")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://registry.terraform.io/providers/scottwinkler/shell/latest/docs/resources/shell_script_resource",target:"_blank",rel:"noopener noreferrer"}},[a._v("Terraform shell_script provider"),r("OutboundLink")],1)]),a._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/zhangpanqin/fly-devops/tree/master/terraform/shell-script",target:"_blank",rel:"noopener noreferrer"}},[a._v("fly-devops/terraform/shell-script"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("根据传入的 bound_styra_systems 去查询对应的 system_id，然后根据 id 拿到对应的 dir，去创建这个 dir。")]),a._v(" "),r("p",[a._v("bound_styra_systems 取值可以是 a，b，c 中的任意组合。")]),a._v(" "),r("h2",{attrs:{id:"debug-terraform"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#debug-terraform"}},[a._v("#")]),a._v(" Debug terraform")]),a._v(" "),r("h3",{attrs:{id:"查看执行日志"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看执行日志"}},[a._v("#")]),a._v(" 查看执行日志")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TF_LOG")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),r("h3",{attrs:{id:"查看执行代码输出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看执行代码输出"}},[a._v("#")]),a._v(" 查看执行代码输出")]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ./debug\n\nterraform init\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入控制台查看变量，控制台 exit 退出")]),a._v("\n\nterraform console -var-file sandbox.auto.tfvars.json\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# *.auto.tfvars.json 会自动识别")]),a._v("\nterraform console\n")])])]),r("p",[a._v("有的时候我们写的 terraform 逻辑比较复杂，想调试的时候，可以使用 "),r("code",[a._v("terraform console")]),a._v(" 来读取计算之后的变量值。")])])}),[],!1,null,null,null);r.default=s.exports}}]);