(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{359:function(t,n,a){t.exports=a.p+"assets/img/springmvc-17200759884942.b40032bb.png"},458:function(t,n,a){"use strict";a.r(n);var s=a(9),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("img",{attrs:{src:a(359),alt:"springmvc"}})]),t._v(" "),n("h2",{attrs:{id:"getting-started"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),n("p",[t._v("DispatcherServletAutoConfiguration 自动创建了 DispatcherServlet Bean。")]),t._v(" "),n("p",[t._v("DispatcherServlet 继承了 ApplicationContextAware 和 EnvironmentAware。")]),t._v(" "),n("p",[t._v("为了注册 ConfigurableWebEnvironment 和 WebApplicationContext 属性到 DispatcherServlet。")]),t._v(" "),n("p",[t._v("当第一个请求到达 DispatcherServlet 会触发 Servlet 的初始化，init 方法执行，有且仅执行一次。")]),t._v(" "),n("p",[t._v("init -> onRefresh -> initStrategies")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initStrategies")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMultipartResolver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLocaleResolver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initThemeResolver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initHandlerMappings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initHandlerAdapters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initHandlerExceptionResolvers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initRequestToViewNameTranslator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initViewResolvers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initFlashMapManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("ServletWebServerApplicationContext onRefresh 的时候，会 createWebServer，创建 TomcatStarter（ServletContainerInitializer")]),t._v(" "),n("p",[t._v("servlet 3.0 规范），绑定 Tomcat context。")]),t._v(" "),n("p",[t._v("TomcatStarter 的 onStartup 被回调，然后调用了 ServletContextInitializer onStartup。")]),t._v(" "),n("p",[t._v("DispatcherServletRegistrationBean 实现了 ServletContextInitializer。")]),t._v(" "),n("p",[t._v("DispatcherServletRegistrationBean 会将 DispatcherServlet 和 Tomcat 关联。")]),t._v(" "),n("p",[t._v("HandlerMethodArgumentResolver 方法入参解析。")]),t._v(" "),n("h3",{attrs:{id:"参数解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数解析"}},[t._v("#")]),t._v(" 参数解析")]),t._v(" "),n("p",[t._v("HandlerMethodArgumentResolver  负责参数解析。")]),t._v(" "),n("p",[t._v("在同一个项目中 "),n("code",[t._v("LocalDateTime")]),t._v(" 如果既可以传 "),n("code",[t._v("yyyy/MM/dd HH:mm:ss")]),t._v(" 又可以传 "),n("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v("，那得多崩溃，也不好维护。")]),t._v(" "),n("p",[t._v("返回的 json 中日期格式如果也不固定，前端估计意见也挺大的。")]),t._v(" "),n("p",[t._v("我们可以实现 "),n("code",[t._v("Converter")]),t._v(" 统一 "),n("code",[t._v("form/data")]),t._v(" 和 "),n("code",[t._v("QueryString")]),t._v(" 参数解析。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后将 WebMvcConfiguration 注册为 Spring 的 Bean")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfiguration")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfigurer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFormatters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormatterRegistry")]),t._v(" registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// form 表单个 query String 用下面的 convert 转换参数")]),t._v("\n        registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2InstantConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2LocalDateConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2LocalDateTimeConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate2StringConverter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("SpringBoot 使用 Jackson 将 request body 反序列化为 Java 对象，也使用 Jackson 将 java 对象序列化之后返回前端。")]),t._v(" "),n("p",[t._v("查看源码 "),n("code",[t._v("JacksonAutoConfiguration")]),t._v(" 我们可以看到，通过实现 "),n("code",[t._v("Jackson2ObjectMapperBuilderCustomizer")]),t._v(" 扩展 ObjectMapper")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/tree/master/cloud-common/src/main/java/com/mflyyou/cloud/common/convert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Convert 代码预览"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/blob/master/cloud-common/src/main/java/com/mflyyou/cloud/common/CommonJacksonCustomizerAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("jackson 扩展代码预览"),n("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);