(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{384:function(a,s,t){"use strict";t.r(s);var e=t(9),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[a._v("#")]),a._v(" Git")]),a._v(" "),s("h2",{attrs:{id:"git-常用配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用配置"}},[a._v("#")]),a._v(" Git 常用配置")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("~/.gitconfig")]),a._v(" 保存用户 Git 的全局配置")]),a._v(" "),s("li",[s("code",[a._v(".git/config")]),a._v(" 保存某个仓库的配置")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看全局配置")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看某个仓库的配置")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("\n")])])]),s("h3",{attrs:{id:"一台电脑配置多个-github-账号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一台电脑配置多个-github-账号"}},[a._v("#")]),a._v(" 一台电脑配置多个 github 账号")]),a._v(" "),s("ol",[s("li",[a._v("在 "),s("code",[a._v("~/.gitconfig")]),a._v(" 全局配置某个目录下的 git 仓库使用不同的配置。")])]),a._v(" "),s("p",[s("code",[a._v("/Users/panqinzhang/xx/")]),a._v(" 目录使用 "),s("code",[a._v("/Users/panqinzhang/xx/.gitconfig")]),a._v("。 别的目录还是使用默认的 ssh。")]),a._v(" "),s("div",{staticClass:"language-git extra-class"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[a._v("[user]\nname = zhangpanqin\nemail = zhangpanqin@outlook.com\n[core]\nautocrlf = input\n[includeIf "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gitdir:/Users/panqinzhang/xx/"')]),a._v("]\npath = /Users/panqinzhang/xx/.gitconfig\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("/Users/panqinzhang/xx/.gitconfig")])]),a._v(" "),s("div",{staticClass:"language-git extra-class"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[a._v("[core]\nsshCommand = ssh -i ~/.ssh/id_rsa_xx\n[commit]\ngpgSign = true\n[user]\nsigningkey = D7157434BC92C13C\nname = xx\nemail = xx\n")])])]),s("h3",{attrs:{id:"修改某个-git-仓库特定配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改某个-git-仓库特定配置"}},[a._v("#")]),a._v(" 修改某个 git 仓库特定配置")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" user.name xx\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" user.email xxx\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" commit.gpgSign "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" user.signingkey D7157434BC92C13C\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" core.sshCommand "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ssh -o IdentitiesOnly=yes -i ~/.ssh/id_rsa_rba"')]),a._v("\n")])])]),s("p",[a._v("修改全局使用 "),s("code",[a._v("--global")]),a._v(" 。")]),a._v(" "),s("h3",{attrs:{id:"配置-gpg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-gpg"}},[a._v("#")]),a._v(" 配置 gpg")]),a._v(" "),s("p",[a._v("安装这个之后，就不需要，每次都要输入 gpg 的密码了。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不需要在 ~/.zshrc 配置 export GPG_TTY=$(tty)")]),a._v("\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" pinentry-mac\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"pinentry-program /usr/local/bin/pinentry-mac"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" ~/.gnupg/gpg-agent.conf\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("killall")]),a._v(" gpg-agent\n")])])]),s("h3",{attrs:{id:"配置-gitignore-不将那些文件纳入版本控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitignore-不将那些文件纳入版本控制"}},[a._v("#")]),a._v(" 配置 .gitignore 不将那些文件纳入版本控制")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只忽略根目录下的 a.js")]),a._v("\n/a.js\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略文件名是 a.js，不管是哪个目录下")]),a._v("\na.js\n")])])]),s("h3",{attrs:{id:"配置-gitattributes-管理文件换行符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitattributes-管理文件换行符"}},[a._v("#")]),a._v(" 配置 .gitattributes 管理文件换行符")]),a._v(" "),s("p",[a._v("有的一些文件，我们在工作目录必须是 ctrf 结尾。比如 bat 脚本。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("*.js  text  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("eol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("lf\n*.jsx  text "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("eol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("lf\n*.json text "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("eol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("lf\n*.sh text "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("eol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("lf\n*.bat text "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("eol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("crlf\n*.png binary\n*.jpg binary\n")])])]),s("p",[a._v("配置好之后运行以下命令（先 commit 未提交代码）,这样对应的文件的行结束符就显示正常了。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v("\n")])])]),s("h3",{attrs:{id:"配置-pre-commit-config-yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-pre-commit-config-yaml"}},[a._v("#")]),a._v(" 配置 "),s("code",[a._v(".pre-commit-config.yaml")])])])}),[],!1,null,null,null);s.default=n.exports}}]);