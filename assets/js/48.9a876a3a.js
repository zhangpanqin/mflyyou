(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{398:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据类型"}},[t._v("#")]),t._v(" Mysql 数据类型")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("表设计的时候一定要选取合适的数据类型，能用数字就不要用字符串，一是减少存储时空间的浪费，二是减少查询时内存的浪费。")])])],1),t._v(" "),a("h3",{attrs:{id:"整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("占用字节")]),t._v(" "),a("th",[t._v("范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("tinyint")]),t._v(" "),a("td",[t._v("对应 java 中 byte")]),t._v(" "),a("td",[t._v("1 字节")]),t._v(" "),a("td",[t._v("有符号-128 至 127。"),a("br"),t._v("无符号 0 至 255")])]),t._v(" "),a("tr",[a("td",[t._v("smallint")]),t._v(" "),a("td",[t._v("对应 java 中 short")]),t._v(" "),a("td",[t._v("2 字节")]),t._v(" "),a("td",[t._v("有符号 -32768 至 32767。"),a("br"),t._v("无符号 0 至 65535")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("对应 java 中 int")]),t._v(" "),a("td",[t._v("4 字节")]),t._v(" "),a("td",[t._v("有符号 -2147483648 至 2147483647。"),a("br"),t._v("无符号 0 至 4294967295")])]),t._v(" "),a("tr",[a("td",[t._v("bigint")]),t._v(" "),a("td",[t._v("对应 java 中 long")]),t._v(" "),a("td",[t._v("8 字节")]),t._v(" "),a("td",[t._v("有符号 -9223372036854775808 至 9223372036854775807 "),a("br"),t._v("无符号 0 至 18446744073709551615")])])])]),t._v(" "),a("h3",{attrs:{id:"小数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小数"}},[t._v("#")]),t._v(" 小数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("占用字节")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("FLOAT(M, D)")]),t._v(" "),a("td",[t._v("对应 java 中 float")]),t._v(" "),a("td",[t._v("4 字节")])]),t._v(" "),a("tr",[a("td",[t._v("DOUBLE(M, D)")]),t._v(" "),a("td",[t._v("对应 java 中 double")]),t._v(" "),a("td",[t._v("8 字节")])]),t._v(" "),a("tr",[a("td",[t._v("DECIMAL(M, D)")]),t._v(" "),a("td",[t._v("对应 java 中 BigDecimal。定点数，可以精确保存小数")]),t._v(" "),a("td",[t._v("M 和 D 决定")])])])]),t._v(" "),a("p",[a("code",[t._v("M")]),t._v(" 表示小数的有效数字，"),a("code",[t._v("D")]),t._v(" 表示小数点后的有效数字。")]),t._v(" "),a("p",[t._v("FLOAT(4, 1) 不能存 4000.1 会报错误。")]),t._v(" "),a("h3",{attrs:{id:"日期和时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间"}},[t._v("#")]),t._v(" 日期和时间")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("占用字节")]),t._v(" "),a("th",[t._v("取值范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("YEAR")]),t._v(" "),a("td",[t._v("年份")]),t._v(" "),a("td",[t._v("1 字节")]),t._v(" "),a("td",[t._v("1901~2155")])]),t._v(" "),a("tr",[a("td",[t._v("DATE")]),t._v(" "),a("td",[t._v("日期，年月日")]),t._v(" "),a("td",[t._v("3 字节")]),t._v(" "),a("td",[t._v("1000-01-01~ 9999-12-31")])]),t._v(" "),a("tr",[a("td",[t._v("TIME(fsp)")]),t._v(" "),a("td",[t._v("时间，时分秒")]),t._v(" "),a("td",[t._v("3 字节")]),t._v(" "),a("td",[t._v("-838:59:59.000000 ~ 838:59:59.000000")])]),t._v(" "),a("tr",[a("td",[t._v("DATETIME(fsp)")]),t._v(" "),a("td",[t._v("日期+时间")]),t._v(" "),a("td",[t._v("5 字节")]),t._v(" "),a("td",[t._v("1000-01-01 00:00:00.000000 ~ 9999-12-31 23:59:59.999999")])]),t._v(" "),a("tr",[a("td",[t._v("TIMESTAMP(fsp)")]),t._v(" "),a("td",[t._v("底层存储的是 UTC 时间戳，"),a("br"),t._v("显示值会随 mysql 数据库所在时区变化")]),t._v(" "),a("td",[t._v("4 字节")]),t._v(" "),a("td",[t._v("1970-01-01 00:00:01.000000 ~ 2038-01-19 03:14:07.999999")])])])]),t._v(" "),a("p",[a("code",[t._v("TIMESTAMP(fsp)")]),t._v(" 中的 "),a("strong",[t._v("fsp")]),t._v(" 是指秒的精度(x.xxx xxx)，"),a("strong",[t._v("fsp")]),t._v("取值 0，1，2，3，4，5，6。")]),t._v(" "),a("p",[a("code",[t._v("TIME")]),t._v("、"),a("code",[t._v("DATETIME")]),t._v("、"),a("code",[t._v("TIMESTAMP")]),t._v(" 这几种类型支持小数秒。")]),t._v(" "),a("p",[a("code",[t._v("DATETIME(0)")]),t._v(" 精确到秒，没有小数位。")]),t._v(" "),a("p",[a("code",[t._v("DATETIME(3)")]),t._v(" 精确到豪秒，有三位小数。")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("**日期和时间存储时区的设置有关，一定要搞清楚原理。 **")])],1),t._v(" "),a("p",[a("strong",[t._v("TIMESTAMP")]),t._v(" 的显示和数据库系统设置的时区有关。"),a("strong",[t._v("TIMESTAMP")]),t._v(" 底层实际存储的是毫秒值，显示的时间是根据设置的时区（"),a("strong",[t._v("time_zone")]),t._v("）转换为时间显示的。")]),t._v(" "),a("p",[t._v("还有 Java 1.8 新增的 "),a("code",[t._v("LocalDateTime")]),t._v(" 需要怎么转换 "),a("code",[t._v("Mysql")]),t._v(" 中的时间呢。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看 mysql 的时区设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%time_zone%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v('mysql> SHOW VARIABLES LIKE "%time_zone%";\n+------------------+--------+\n| Variable_name    | Value  |\n+------------------+--------+\n| system_time_zone | CET    |\n| time_zone        | +08:00 |\n+------------------+--------+\n')])])]),a("p",[a("code",[t._v("system_time_zone")]),t._v(" 是 "),a("code",[t._v("Mysql")]),t._v(" 启动的时候获取计算机系统所在的时区。只要计算机的时间准确就没有问题。")]),t._v(" "),a("p",[a("code",[t._v("time_zone")]),t._v(" 设置的是连接 mysql 的会话中，时间 （java.util.Date）转换为字符串时的 TimeZone。"),a("code",[t._v("time_zone")]),t._v(" 这个值可以被 jdbc 连接中的 "),a("code",[t._v("serverTimezone=Asia/Shanghai")]),t._v(" 覆盖。")]),t._v(" "),a("p",[t._v("因为我们是在东八区，希望时间都转换为东八区时间。")]),t._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[mysqld]\n# 将时间转换为东八区的时间\ndefault-time-zone = '+08:00'\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_data_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_data_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("243")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4_0900_ai_ci\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 实际保存数据的时候需要将日期转换为字符串，拼接成这样的 sql")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" test_data_type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_data_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("test_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-12-12 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-12-12 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("比如我们将 java 中的 "),a("code",[t._v("LocalDateTime")]),t._v(" 存为 datetime 类型。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_data_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestDataType")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AUTO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_data_time"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" testDataTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_timestamp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" testTimestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当我们保存数据的时候，需要根据配置的 time_zone,将 LocalDateTime 转为 String，在替换到 sql 中的 "),a("code",[t._v("?")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" test_data_type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_data_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("test_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NativeProtocol.configureTimezone 可以看到这个逻辑")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" void run33"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" {\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先获取到在服务器设置的 time_zone，如果没有设置的话，默认取 mysql 服务器所在时区")]),t._v("\n\tString configuredTimeZoneOnServer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serverSession"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getServerVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time_zone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jdbc 链接中设置的参数")]),t._v("\n\tString canonicalTimezone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" getStringProperty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"serverTimezone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canonicalTimezone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("canonicalTimezone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("{\n\t\tcanonicalTimezone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("configuredTimeZoneOnServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jdbc url 参数中配置的 serverTimezone 和 time_zone 都是为了获取 TimeZone，serverTimezone 的优先级更高")]),t._v("\n \tfinal TimeZone timeZone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TimeZone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getTimeZone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canonicalTimezone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Timestamp 继承了 java.util.Date")]),t._v("\n \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里会将获得 LocalDateTime 获取其年月日时分秒上的值")]),t._v("\n    final "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Timestamp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("valueOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LocalDateTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    final SimpleDateFormat simpleDateFormat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new SimpleDateFormat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    simpleDateFormat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("applyPattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy.MM.dd HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    simpleDateFormat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setTimeZone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeZone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后将这个 time 替换 ？")]),t._v("\n   \tString "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simpleDateFormat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n}\n")])])]),a("h4",{attrs:{id:"时区设置结论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时区设置结论"}},[t._v("#")]),t._v(" 时区设置结论")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("当我们保存数据的创建时间的时候，只需获取当前时间就行。当前时区与东八区的时差，mysql 配置的 "),a("code",[t._v("time_zone")]),t._v("和 "),a("code",[t._v("serverTimezone")]),t._v(" 转换成字符串时会自动加上。")])])],1),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" createTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LocalDateTime 一定不要自己补时差，不然时间会对不上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" createTime2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这个用法是错误的。这样数据库中保存的时间比实际时间多了八个小时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" errorCreateTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ZoneId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTC+8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("h4",{attrs:{id:"varchar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#varchar"}},[t._v("#")]),t._v(" varchar")]),t._v(" "),a("p",[t._v("varchar (M) 中 M 指的是字符数。"),a("font",{attrs:{color:"red"}},[a("strong",[t._v("Mysql 限制在一行数据中，所有 varchar 列的总字节数不能超过 65535 字节。")])])],1),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- utf8mb4 实际会占用 1-3 字节")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_varchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("执行上述 sql 报错为：")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("1074 - Column length too big for column 'test_name' (max = 16383); use BLOB or TEXT instead, Time: 0.000000s\n")])])]),a("p",[t._v("验证所有 varchar 列总数据不能超过 65535")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_varchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_name1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_name2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test_name3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("执行上述 sql 报错信息为")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("1118 - Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs, Time: 0.002000s\n")])])]),a("p",[t._v("varchar (M) 实际占用字节数，除了数据的占用，还有数据字节数大小的记录（1-2 字节）。")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("varchar(255) 存储的 abc 的时候占用 4 个字节，但是这个数据加载到内存的时候是占用定义的时候指定的字节数 （255*3 utf8 编码）所以这个数值不要随便填写")])])],1),t._v(" "),a("h4",{attrs:{id:"char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char"}},[t._v("#")]),t._v(" char")]),t._v(" "),a("p",[t._v("char(M) M 也是指的字符数，列采用的字符集不同，char 类型数据占用大小也不一样。char 类型的数据没有达到指定字符数，数据库会自动补充空格，返回数据的时候在去掉空格。")]),t._v(" "),a("p",[t._v("当一个字符串太长的时候一定要采取 text 类型的数据，text 类型的数据存储的时候会作为行溢出数据存储，就没有 65535 大小的限制。")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("// 可以看到占用\nhttps://dev.mysql.com/doc/refman/8.0/en/storage-requirements.html\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("总字节数")]),t._v(" "),a("th",[t._v("内容字节")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("VARCHAR(M)、VARBINARY(M)")]),t._v(" "),a("td",[t._v("L+ 1 bytes if column values require 0 − 255 bytes,"),a("br"),t._v("L+ 2 bytes if values may require more than 255 bytes")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("TINYBLOB 、TINYTEXT")]),t._v(" "),a("td",[t._v("L+1")]),t._v(" "),a("td",[t._v("L<2^8")])]),t._v(" "),a("tr",[a("td",[t._v("BLOB、TEXT")]),t._v(" "),a("td",[t._v("L + 2")]),t._v(" "),a("td",[t._v("L<2^16")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMBLOB、MEDIUMTEXT")]),t._v(" "),a("td",[t._v("L+ 3")]),t._v(" "),a("td",[t._v("L<2^24")])]),t._v(" "),a("tr",[a("td",[t._v("LONGBLOB、LONGTEXT")]),t._v(" "),a("td",[t._v("L+ 4")]),t._v(" "),a("td",[t._v("L<2^32")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);