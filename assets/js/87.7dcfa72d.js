(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{444:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("ThoughWorks")]),t._v(" 的第一个项目已经结束，在项目上也学到了不少技术，Gradle，DDD，k8s，graphql，契约测试，集成测试等等。还有下个项目从头开始的 "),a("code",[t._v("devops")]),t._v("。")]),t._v(" "),a("p",[t._v("最近自己也在总结项目上的一些不错的实践，将来的项目说不定也需要用到。")]),t._v(" "),a("h3",{attrs:{id:"配置属性的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置属性的管理"}},[t._v("#")]),t._v(" 配置属性的管理")]),t._v(" "),a("p",[t._v("有的时候我们需要屏蔽不必要的技术细节和复杂度传递，比如 "),a("code",[t._v("sleuth")]),t._v(" ，"),a("code",[t._v("zipkin")]),t._v("，"),a("code",[t._v("actuator")]),t._v(" ，"),a("code",[t._v("数据库连接池")]),t._v(" 等配置，开发的注意力应该较多集中在业务上。")]),t._v(" "),a("p",[t._v("同时又需要提供可以覆写的自由度，比如公共库中配置了 "),a("code",[t._v("server.max-http-header-size: 10KB")]),t._v(" ，但有的项目也可以修改为 "),a("code",[t._v("50KB")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Spring")]),t._v(" 的配置属性由 "),a("code",[t._v("Environment")]),t._v(" 统一管理，同时针对不同配置的来源抽象了"),a("code",[t._v("PropertySource")]),t._v(" ，当需要查找某个属性时，根据配置的优先级从 "),a("code",[t._v("PropertySource")]),t._v(" 查找，找到就返回。")]),t._v(" "),a("p",[t._v("我们常用到的配置加载顺序")]),t._v(" "),a("ol",[a("li",[t._v("Command line arguments")]),t._v(" "),a("li",[t._v("Java System properties")]),t._v(" "),a("li",[t._v("./file:/config/application-{profile}.yml")]),t._v(" "),a("li",[t._v("./file:/application-{profile}.yml")]),t._v(" "),a("li",[t._v("./file:/config/application.yml6")]),t._v(" "),a("li",[t._v("./file:/application.yml5")]),t._v(" "),a("li",[t._v("classpath:/config/application-{profile}.yml")]),t._v(" "),a("li",[t._v("classpath:/application-{profile}.yml")]),t._v(" "),a("li",[t._v("classpath:/config/application.yml")]),t._v(" "),a("li",[t._v("classpath:/application.yml")])]),t._v(" "),a("p",[t._v("我们可以实现 "),a("code",[t._v("EnvironmentPostProcessor")]),t._v(" 添加一些 PropertySource 到 Environmen 中去。")]),t._v(" "),a("ol",{attrs:{start:"11"}},[a("li",[t._v("classpath:/application-default-{profile}.yml")]),t._v(" "),a("li",[t._v("classpath:/application-default.yml")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/blob/master/cloud-common/src/main/java/com/mflyyou/cloud/common/env/ApplicationDefaultEnvironmentPostProcessor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码预览 ApplicationDefaultEnvironmentPostProcessor"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("然后在 "),a("code",[t._v("META-INF/spring.factories")]),t._v(" 配置让 SpringBoot 的 SPI 去加载我们的实现")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("org.springframework.boot.env.EnvironmentPostProcessor=\\\n    com.mflyyou.cloud.common.env.ApplicationDefaultEnvironmentPostProcessor\n")])])]),a("h3",{attrs:{id:"参数解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数解析"}},[t._v("#")]),t._v(" 参数解析")]),t._v(" "),a("p",[t._v("在同一个项目中 "),a("code",[t._v("LocalDateTime")]),t._v(" 如果既可以传 "),a("code",[t._v("yyyy/MM/dd HH:mm:ss")]),t._v(" 又可以传 "),a("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v("，那得多崩溃，也不好维护。")]),t._v(" "),a("p",[t._v("返回的 json 中日期格式如果也不固定，前端估计意见也挺大的。")]),t._v(" "),a("p",[t._v("我们可以实现 "),a("code",[t._v("Converter")]),t._v(" 统一 "),a("code",[t._v("form/data")]),t._v(" 和 "),a("code",[t._v("QueryString")]),t._v(" 参数解析。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后将 WebMvcConfiguration 注册为 Spring 的 Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfigurer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFormatters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormatterRegistry")]),t._v(" registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// form 表单个 query String 用下面的 convert 转换参数")]),t._v("\n        registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2InstantConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2LocalDateConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String2LocalDateTimeConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate2StringConverter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("SpringBoot 使用 Jackson 将 request body 反序列化为 Java 对象，也使用 Jackson 将 java 对象序列化之后返回前端。")]),t._v(" "),a("p",[t._v("查看源码 "),a("code",[t._v("JacksonAutoConfiguration")]),t._v(" 我们可以看到，通过实现 "),a("code",[t._v("Jackson2ObjectMapperBuilderCustomizer")]),t._v(" 扩展 ObjectMapper")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/tree/master/cloud-common/src/main/java/com/mflyyou/cloud/common/convert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Convert 代码预览"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/blob/master/cloud-common/src/main/java/com/mflyyou/cloud/common/CommonJacksonCustomizerAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("jackson 扩展代码预览"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"统一异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统一异常处理"}},[t._v("#")]),t._v(" 统一异常处理")]),t._v(" "),a("p",[t._v("项目中有一些异常是都会碰到的，比如权限异常，登录异常，token 异常等，但也有一些业务异常在各个微服务中不一样，就需要差异性处理。")]),t._v(" "),a("p",[t._v("因此我们需要公共异常在公共库中统一处理，差异的异常服务自治。")]),t._v(" "),a("p",[t._v("异常返回参数格式有必要统一，这样前端可以根据 code 友好展示提示信息，展示的信息建议前端维护。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lock name is [1] and type is [SIMPLE_LOCK], failure to unlock"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"codeDescription"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Server is busy and try again later"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SERVER_IS_BUSY_AND_TRY_AGAIN_LATER"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("DispatcherServlet")]),t._v(" 代码可以看到 SpringMvc 使用 "),a("code",[t._v("HandlerExceptionResolver")]),t._v(" 处理异常。")]),t._v(" "),a("p",[a("code",[t._v("WebMvcAutoConfiguration")]),t._v(" 可以看到注册了 "),a("code",[t._v("EnableWebMvcConfiguration")]),t._v(" ,而 "),a("code",[t._v("DelegatingWebMvcConfiguration")]),t._v(" 继承了 WebMvcConfigurationSupport，这样就把默认的 HandlerExceptionResolver 生效了。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyBeanMethods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableConfigurationProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableWebMvcConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DelegatingWebMvcConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoaderAware")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfigurationSupport")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextAware")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextAware")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HandlerExceptionResolver")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handlerExceptionResolver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Qualifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mvcContentNegotiationManager"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContentNegotiationManager")]),t._v(" contentNegotiationManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HandlerExceptionResolver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" exceptionResolvers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureHandlerExceptionResolvers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionResolvers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionResolvers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载 ExceptionHandlerExceptionResolver 等，用于 @ExceptionHandler")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDefaultHandlerExceptionResolvers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionResolvers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contentNegotiationManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载了 WebMvcConfigurer.extendHandlerExceptionResolvers 配置的自定义 HandlerExceptionResolver")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendHandlerExceptionResolvers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionResolvers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HandlerExceptionResolverComposite")]),t._v(" composite "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HandlerExceptionResolverComposite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tcomposite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOrder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tcomposite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExceptionResolvers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionResolvers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" composite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("ErrorMvcAutoConfiguration")]),t._v(" 代码可以看到 SpringBoot 为我们注册了 "),a("code",[t._v("DefaultErrorAttributes")]),t._v("，它也是一个 HandlerExceptionResolver ，主要用于标记当前请求是否发生了异常， EnableWebMvcConfiguration 注册的 HandlerExceptionResolver 如果处理了异常，"),a("code",[t._v("DispatcherServlet")]),t._v(" 会清楚异常标记，然后请求就返回了错误提示信息。")]),t._v(" "),a("p",[t._v("有异常标记的请求，在 Tomcat 中会转发到 /error 去处理，"),a("code",[t._v("ErrorMvcAutoConfiguration")]),t._v(" 注册的 "),a("code",[t._v("BasicErrorController")]),t._v(" 用于处理 /error 请求。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blog/20210815195645.png?author=zhangpanqin",alt:"exception"}})]),t._v(" "),a("h3",{attrs:{id:"公共库-bean-管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公共库-bean-管理"}},[t._v("#")]),t._v(" 公共库 Bean 管理")]),t._v(" "),a("p",[a("code",[t._v("@SpringBootApplication")]),t._v(" 只会扫描所在类包下及子包中的 "),a("code",[t._v("@Configuration")]),t._v(" ，我们在公共库直接加 "),a("code",[t._v("@Configuration 等")]),t._v(" 可能不会使配置生效， 建议在")]),t._v(" "),a("p",[a("code",[t._v("META-INF/spring.factories")]),t._v(" 添加如下配置将其生效。")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n    com.mflyyou.cloud.common.CommonWebMvcAutoConfiguration\n")])])]),a("p",[t._v("这利用 SpringBoot 的自动加载原理，制作项目自己的 starter。")]),t._v(" "),a("h3",{attrs:{id:"aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" Aop")]),t._v(" "),a("p",[t._v("公共库的 Aop 不要使用注解式，使用编程式。")]),t._v(" "),a("p",[a("code",[t._v("Advisor")]),t._v(" 切面，标明执行哪些方法的时候，执行某些通知。一般可以继承 AbstractPointcutAdvisor。")]),t._v(" "),a("p",[a("code",[t._v("Pointcut")]),t._v(" 切入点，标明需要拦截哪些方法。AnnotationMatchingPointcut 可以匹配注解标记，当类上注解有，当方法上有注解。"),a("code",[t._v("ComposablePointcut")]),t._v(" 可以用于聚合多个 Pointcut。")]),t._v(" "),a("p",[a("code",[t._v("Advice")]),t._v(" 通知，我们可以实现 "),a("code",[t._v("MethodInterceptor")]),t._v(" 做到逻辑的植入。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/zhangpanqin/fly-spring-cloud/blob/master/cloud-common/src/main/java/com/mflyyou/cloud/common/lock/DistributedLockAdvisor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码预览 DistributedLockAdvisor"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("我们可以通过配置 "),a("code",[t._v("Advisor")]),t._v(" 的 order ，来影响 Advice 执行的顺序。比如我们的日志切面需要在最外层执行。")]),t._v(" "),a("p",[t._v("切面执行顺序一定要考虑优先级，不然可能会出现由于事务问题导致脏数据。")]),t._v(" "),a("p",[t._v("为了知道为什么会发生这个问题，我们需要知道 aop 切面执行的顺序。它执行 和 Filter 差不多，责任链模式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blog/20210815195651.png?author=zhangpanqin",alt:"aop"}})]),t._v(" "),a("p",[t._v("执行顺序可以按照标注的序号理解，如果 aspect 2 为事务切面，aspect 1 为分布式锁切面。")]),t._v(" "),a("p",[t._v("如果 aspect 2 执行完，事务提交了，而在执行第 9 步的时候，Redis 奔溃，导致分布式锁解锁失败，返回了错误提示信息，但是数据却持久化了。")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("code",[t._v("@EnableTransactionManagement")]),t._v(" order 属性可以修改事务切面的顺序，先执行事务切面，在执行分布式锁切面，这样事务切面就能感知到分布式锁切面的异常从而控制事务回滚。")])],1),t._v(" "),a("h3",{attrs:{id:"faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),a("h4",{attrs:{id:"user-dir-是哪个目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-dir-是哪个目录"}},[t._v("#")]),t._v(" user.dir 是哪个目录？")]),t._v(" "),a("p",[a("code",[t._v("./file")]),t._v(" 实际是 "),a("code",[t._v('System.getProperty("user.dir")')]),t._v(" ，在那个目录下执行 java 命令，"),a("code",[t._v("usr.dir")]),t._v(" 就会被 JVM 赋值为执行命令的路径。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java -cp /fly-spring-cloud/order-management-service/build/classes/java/main com.mflyyou.cloud.UserDirDemo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDirDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.dir"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当在 "),a("code",[t._v("/Users/panqinzhang/github/fly-spring-cloud/user-management-service")]),t._v(" 运行代码中的命令，user.dir 就是 user-management-service 目录绝对路径。")]),t._v(" "),a("p",[t._v("当在 "),a("code",[t._v("/Users/panqinzhang/github/fly-spring-cloud/order-management-service")]),t._v(" 运行代码中的命令，user.dir 就是 order-management-service 目录绝对路径。")]),t._v(" "),a("h4",{attrs:{id:"command-line-arguments-和-java-system-properties-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-arguments-和-java-system-properties-说明"}},[t._v("#")]),t._v(" Command line arguments 和 Java System properties 说明")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -D 定义 Java System properties")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --name=aaa 定义 Command line arguments，注意 -- 必须带，不然配置不会生效，在 java -? 有说明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dfile.encoding")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("UTF-8 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cp")]),t._v(" /order-management-service/classes com.mflyyou.cloud.UserDirDemo "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("aaa\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);