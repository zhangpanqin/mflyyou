(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{382:function(t,a,s){"use strict";s.r(a);var e=s(9),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-命令"}},[t._v("#")]),t._v(" Git 命令")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("如果对某个 git 命令心里没底，就把代码先提交了，让工作区没有变更的代码。")]),t._v(" "),a("p",[t._v("这些不管你运行什么命令都是可以找回来的，前提你不要删除你的本地仓库。")])]),t._v(" "),a("h2",{attrs:{id:"git-基础命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-基础命令"}},[t._v("#")]),t._v(" Git 基础命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[name]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[email address]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加当前目录的所有文件到暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止追踪指定文件，但该文件会保留在工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交暂存区到仓库区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改上一次提交的 message")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示有变更的文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前分支的版本历史")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示操作日志")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取远程代码，并 rebase 到当前分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以列表形式查看指定文件的历史修改记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" blame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" Git Reset")]),t._v(" "),a("p",[t._v("撤消修改")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--mixed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--soft")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--merge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --keep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("--soft")]),t._v(" , 将 "),a("code",[t._v("HEAD")]),t._v(" 指向某个 commit，工作区和暂存区的修改不会丢失。这个 commit 之前的提交会放到 暂存区。没有更改丢失。工作区没有提交的修改也不会丢失。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--mixed")]),t._v(" , 将 "),a("code",[t._v("HEAD")]),t._v(" 指向某个 commit。将暂存区和这个 commit 之前的提交会放到工作区。没有更改丢失。工作区没有提交的修改也不会丢失。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--hard")]),t._v(" , 将 "),a("code",[t._v("HEAD")]),t._v(" 指向某个 commit。清空暂存区，不会将这个 commit 之前的提交回滚并放回工作区。")]),t._v(" "),a("p",[t._v("工作区的未追踪文件不会丢失，但是暂存区丢失了。")])])]),t._v(" "),a("h2",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" Git Revert")]),t._v(" "),a("p",[t._v("撤消修改，产生一个新的 commit。")]),t._v(" "),a("p",[t._v("撤消某个 commit 的提交，或者撤消一批。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" Git Rebase")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("git-rebase "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("upstream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("如果指定了 "),a("code",[t._v("branch")]),t._v(" ，当前分支不是 "),a("code",[t._v("branch")]),t._v(" ，git 会自动执行 "),a("code",[t._v("git switch <branch>")]),t._v(" ，再去执行后续操作。")]),t._v(" "),a("p",[t._v("::: warn")]),t._v(" "),a("p",[t._v("如果某些 commit 推送到远程了，就不要对这些 commit 进行 rebase。")]),t._v(" "),a("p",[a("code",[t._v("git merge")]),t._v(" 和 "),a("code",[t._v("git rebase")]),t._v(" 都是对分支代码进行合并，只是 git rebase 会重写提交历史记录。")]),t._v(" "),a("p",[t._v(":::")]),t._v(" "),a("h3",{attrs:{id:"原理实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理实践"}},[t._v("#")]),t._v(" 原理实践")]),t._v(" "),a("p",[t._v("假设当前分支为：topic，当前的 git 树是这样的：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    A---B---C topic\n    /\nD---E---F---G master\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个是在 topic 分支执行命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master topic "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先切换到 topic 分支，再执行 git rebase")]),t._v("\n")])])]),a("p",[t._v("执行 "),a("code",[t._v("git rebase")]),t._v(" 命令之后，分支变成以下记录")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("            A'--B'--C' topic\n            /\nD---E---F---G master\n")])])]),a("p",[t._v("A’ 和 A （B 和 B'）hash 是不一样的。只是提交信息一样。")]),t._v(" "),a("p",[a("code",[t._v("git rebase master topic")]),t._v(" 的实现逻辑是这样的：")]),t._v(" "),a("ul",[a("li",[t._v("如果当前分支不是 topic，先 "),a("code",[t._v("git switch")]),t._v(" 切换到 topic 分支")]),t._v(" "),a("li",[t._v("寻找 topic 和 master 分支的工同的父提交，将 topic 支父提交之后的 commits 移到一个临时区域（git reset —hard）暂存")]),t._v(" "),a("li",[t._v("然后再把当前 topic 分支更新成和 master 一样")]),t._v(" "),a("li",[t._v("将临时区域的 commit 再一个一个提交回来放到 topic 分支最上面")])]),t._v(" "),a("h2",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" Git Merge")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    A---B---C topic\n    /\nD---E---F---G master\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge topic // 当前分支是 master 分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge topic master\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("      A---B---C topic\n      /         \\\n  D---E---F---G---H master\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);